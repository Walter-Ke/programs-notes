dx
	Client: 
		//取值 
			control.GetText()
		//設值 
			control.SetText()
			
		//dx自訂client js 屬性
			server control.JSProperties["cpXXX"] 命名以小寫 cp 開頭
											     直接指定值
		//dx自訂client js，前端使用
			control.cpXXX 
			
		//ASPxListBox 計算項目個數
			listBox.GetItemCount()
					
		//ASPxListBox 取得項目文字
			listBox.GetItem(i).text
		
		//停止postback	
			e.processOnServer=false;  
		
		//不顯示，但元素存在
			aspxlabel : width=0, height=0
			aspxtextbox : style="visibility:hidden"
				
		//多選清單		
			radioButtonList: 取得點選index: GetSelectedIndex()
			  				 清空點選: SetSelectedItem(null)
						 
		
		//設定dx元件樣式，style為HTML DOM Style Object  https://www.w3schools.com/jsref/dom_obj_style.asp
			ASPxTextBox.GetInputElement().style
		
		
		//彈跳視窗顯示方法
			ASPxPopupControl1.Show();  -> server: ShowOnPageLoad = true;
			ASPxPopupControl1.Hide();  -> server: ShowOnPageLoad = false;
		
	Server:		
		若callback要執行前端script，無法使用ScriptManager.RegisterStartupScript，需使用dx:ASPxGlobalEvents
		
			<dx:ASPxGlobalEvents ID="ASPxGlobalEvents1" runat="server">
				<ClientSideEvents EndCallback="function(s, e) {
						test(); //呼叫寫好的function
				}" />
			</dx:ASPxGlobalEvents>
		
		
		若預設屬性要修改，如設定css，必須在後端處理，否則postback回來，仍還原成預設值!!
		
		
		若gridview在updatepanel內，要觸發OnCustomButtonCallback，須設定 EnableCallBacks="false"，否則無法更新畫面
		
		
jQuery
	ref: https://ithelp.ithome.com.tw/users/20067050/articles?page=1
	
	selector
		$("元素[屬性1='值1'][屬性2='值2']")
		
			依屬性的值尋找元素
				$("td[title='value']").text()
			
			尋找屬性id的值，開頭為某字串的元素
				$("div[id^='keyword']")
			，結尾為某字串的元素
				$("div[id$='keyword']")
			，包含為某字串的元素
				$("div[id*='keyword']")

		依符合字串尋找元素
			$("div:contains('all string')").filter(function(){ return $(this).text() == 'all string';})
		
	
	Traverse
		尋找上一層最近的父元素
			.closest()
		
		find('tr:eq(0)').text()
		find('td:eq(0)').text()	
		
		$element.map(function(val){
				return 
			});
	
	Attribute
		移除css屬性值
			.css('display','')
			
		新增/移除css class
			.addClass('classname')
			.removeClass('classname')
			
		
	.ajax()
		contentType: 'application/json'    //傳送內容至伺服端的格式
		dataType: 'json'				   //傳回至客戶端的格式	
		data: JSON.stringify(para)		   //傳送至伺服端的參數	

js	
	//string to number
	Number(string) //小數點、整數
	
	
	//判斷數值
		isNaN(value) === false  為數值
	
	
	//Date判斷格式
	if(isNaN(Date.parse(value))==true)
		alert("格式錯誤");

		
	//阻止呼叫此方法的當前事件，繼續執行捕獲傳遞或冒泡傳遞
		event.stopPropagation();		
		
		
	//顯示yes or no對話方塊
		if(confirm('msg')){ 
			yes 
		}else{ 
			no 
		}
	
	//async / await 
	//https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Statements/async_function
		ES2017(ES8)
		async function test(){
			await func1(); //先執行 func1完，再執行func2
			await func2();
		}
		
		test().then( ()=>{} );
	
	
	
	
CSS
	display:none
		js無法找到內容元素
		
	